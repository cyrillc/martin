<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>zhaw</groupId>
  <artifactId>weatherPlugin</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>weatherPlugin</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <repositories>

    <!-- OpenWeatherMap Client -->
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/groups/public/</url>
    </repository>
  </repositories>

  <dependencies>

    <!-- TEST -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>

    <!-- OpenWeatherMap Client -->
    <!-- This, whit scope system, will not be added to the weatherPlugin.jar -->
    <dependency>
      <groupId>org.bitpipeline.lib</groupId>
      <artifactId>owm-lib</artifactId>
      <version>2.1.3</version>
      <scope>system</scope>
      <systemPath>${basedir}/../owmClient/lib/target/owm-lib-2.1.3-SNAPSHOT.jar</systemPath>
    </dependency>
    <!-- WORKAROUND: -->
    <!-- library is taken from Local Repo (see maven-install-plugin at the 
      end). It's not a clean solution! If pom give you error, because it doesn't 
      find the dependency run "clean install package once" -->
    <dependency>
      <groupId>org.bitpipeline.lib</groupId>
      <artifactId>owm-lib</artifactId>
      <version>2.1.3</version>
    </dependency>
    
    
    
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20160212</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.2</version>
    </dependency>

    <!-- Martin -->
    <dependency>
      <groupId>ch.zhaw.psit4.martin.api</groupId>
      <artifactId>martin-api</artifactId>
      <version>0.0.1-SNAPSHOT</version>
      <scope>system</scope>
      <systemPath>${basedir}/../distributable/target/martin-api-0.0.1-SNAPSHOT.jar</systemPath>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.9.3</version>
    </dependency>
  </dependencies>


  <build>
    <plugins>
      <!-- any other plugins -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <executions>
          <execution>
            <id>install-external</id>
            <phase>clean</phase>
            <configuration>
              <file>${basedir}/../owmClient/lib/target/owm-lib-2.1.3-SNAPSHOT.jar</file>
              <repositoryLayout>default</repositoryLayout>
              <groupId>org.bitpipeline.lib</groupId>
              <artifactId>owm-lib</artifactId>
              <version>2.1.3</version>
              <packaging>jar</packaging>
              <generatePom>true</generatePom>
            </configuration>
            <goals>
              <goal>install-file</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


</project>
