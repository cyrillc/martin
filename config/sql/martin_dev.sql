-- MySQL Script generated by MySQL Workbench
-- 04/07/16 15:17:59
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema martin_dev
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `martin_dev` ;

-- -----------------------------------------------------
-- Schema martin_dev
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `martin_dev` DEFAULT CHARACTER SET utf8 ;
USE `martin_dev` ;

-- -----------------------------------------------------
-- Table `martin_dev`.`request`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`request` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`request` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `command` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `martin_dev`.`response`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`response` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`response` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `responsetext` VARCHAR(500) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `martin_dev`.`historyItem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`historyItem` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`historyItem` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` TIMESTAMP NULL,
  `request` INT NOT NULL,
  `response` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `request_idx` (`request` ASC),
  INDEX `response_idx` (`response` ASC),
  CONSTRAINT `fk_historyItems_request`
    FOREIGN KEY (`request`)
    REFERENCES `martin_dev`.`request` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_historyItems_response`
    FOREIGN KEY (`response`)
    REFERENCES `martin_dev`.`response` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `martin_dev`.`author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`author` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`author` (
  `author_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`author_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `martin_dev`.`plugin`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`plugin` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`plugin` (
  `plugin_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(600) NOT NULL,
  `date` DATE NOT NULL,
  `author_id` INT NOT NULL,
  PRIMARY KEY (`plugin_id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_plugin_author_idx` (`author_id` ASC),
  CONSTRAINT `fk_plugin_author`
    FOREIGN KEY (`author_id`)
    REFERENCES `martin_dev`.`author` (`author_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `martin_dev`.`function`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`function` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`function` (
  `function_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(400) NOT NULL,
  `plugin_id` INT NOT NULL,
  PRIMARY KEY (`function_id`),
  INDEX `fk_function_plugin1_idx` (`plugin_id` ASC),
  CONSTRAINT `fk_function_plugin1`
    FOREIGN KEY (`plugin_id`)
    REFERENCES `martin_dev`.`plugin` (`plugin_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `martin_dev`.`example_call`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`example_call` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`example_call` (
  `example_call_id` INT NOT NULL AUTO_INCREMENT,
  `example_call` VARCHAR(100) NOT NULL,
  `description` VARCHAR(400) NULL,
  `function_id` INT NOT NULL,
  PRIMARY KEY (`example_call_id`),
  UNIQUE INDEX `example_call_UNIQUE` (`example_call` ASC),
  INDEX `fk_example_call_function1_idx` (`function_id` ASC),
  CONSTRAINT `fk_example_call_function1`
    FOREIGN KEY (`function_id`)
    REFERENCES `martin_dev`.`function` (`function_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `martin_dev`.`option`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`option` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`option` (
  `option_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(200) NULL,
  PRIMARY KEY (`option_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `martin_dev`.`parameter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`parameter` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`parameter` (
  `parameter_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `function_id` INT NOT NULL,
  `option_id` INT NOT NULL,
  PRIMARY KEY (`parameter_id`),
  INDEX `fk_parameter_function1_idx` (`function_id` ASC),
  INDEX `fk_parameter_option1_idx` (`option_id` ASC),
  CONSTRAINT `fk_parameter_function1`
    FOREIGN KEY (`function_id`)
    REFERENCES `martin_dev`.`function` (`function_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_parameter_option1`
    FOREIGN KEY (`option_id`)
    REFERENCES `martin_dev`.`option` (`option_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `martin_dev`.`keyword`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`keyword` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`keyword` (
  `keyword_id` INT NOT NULL AUTO_INCREMENT,
  `keyword` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`keyword_id`),
  UNIQUE INDEX `keyword_UNIQUE` (`keyword` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `martin_dev`.`function_has_keyword`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`function_has_keyword` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`function_has_keyword` (
  `function_id` INT NOT NULL,
  `keyword_id` INT NOT NULL,
  `description` VARCHAR(200) NULL,
  PRIMARY KEY (`function_id`, `keyword_id`),
  INDEX `fk_function_has_keyword_keyword1_idx` (`keyword_id` ASC),
  INDEX `fk_function_has_keyword_function1_idx` (`function_id` ASC),
  CONSTRAINT `fk_function_has_keyword_function1`
    FOREIGN KEY (`function_id`)
    REFERENCES `martin_dev`.`function` (`function_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_function_has_keyword_keyword1`
    FOREIGN KEY (`keyword_id`)
    REFERENCES `martin_dev`.`keyword` (`keyword_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `martin_dev`.`parameter_has_keyword`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `martin_dev`.`parameter_has_keyword` ;

CREATE TABLE IF NOT EXISTS `martin_dev`.`parameter_has_keyword` (
  `parameter_id` INT NOT NULL,
  `keyword_id` INT NOT NULL,
  `description` VARCHAR(200) NULL,
  PRIMARY KEY (`parameter_id`, `keyword_id`),
  INDEX `fk_parameter_has_keyword_keyword1_idx` (`keyword_id` ASC),
  INDEX `fk_parameter_has_keyword_parameter1_idx` (`parameter_id` ASC),
  CONSTRAINT `fk_parameter_has_keyword_parameter1`
    FOREIGN KEY (`parameter_id`)
    REFERENCES `martin_dev`.`parameter` (`parameter_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_parameter_has_keyword_keyword1`
    FOREIGN KEY (`keyword_id`)
    REFERENCES `martin_dev`.`keyword` (`keyword_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
